plugins {
    id 'java'
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

def MASTER = "master"
def DEV    = "dev"
def PROD   = "prod"

def URL_PROD = "https://repo.futit.cloud/repository/maven-public-releases"
def URL_DEV  = "https://repo.futit.cloud/repository/maven-public-snapshots"

// Default mode
def mode = DEV

// If the version is updated, make sure to change it in the 'EtendoRxPlugin' class
def pluginVersion = "1.0.0"

static def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

if (MASTER == gitBranch()) {
    mode = PROD
}
if (mode == DEV) {
    pluginVersion += "-SNAPSHOT"
}

def urlToPublish = (mode == PROD) ? URL_PROD : URL_DEV

group 'com.etendorx'
version(pluginVersion)

repositories {
    mavenCentral()
}

publishing {
    repositories {
        maven {
            credentials {
                username "$nexusUser"
                password "$nexusPassword"
            }
            url(urlToPublish)
        }
    }
}

dependencies {
    implementation gradleApi()
    testImplementation gradleTestKit()
}

tasks.withType(Test).configureEach {
    // Using JUnitPlatform for running tests
    useJUnitPlatform()
}

gradlePlugin {
    plugins {
        etendoPlugin {
            id = "com.etendorx.gradlepluginrx"
            implementationClass = "com.etendorx.EtendoRxPlugin"
        }
    }
}
