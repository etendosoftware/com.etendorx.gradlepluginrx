pipeline {
  options {
    disableConcurrentBuilds()
  }

  environment {
    ACCESS_TOKEN        = credentials('github-access-token')
    EMAIL_ADDRESS       = credentials('email_builds')
    CONTEXT_BUILD       = "Plugin RX Tests"
    
    COMMIT_PENDING_STATUS = "pending"
    COMMIT_SUCCESS_STATUS = "success"
    COMMIT_FAILED_STATUS  = "failure"
  }

  agent {
    kubernetes {
      inheritFrom 'jenkins-node-gradle'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-node-core-unittests-0
  namespace: jenkins
  labels:
    app.kubernetes.io/name: jenkins-node-core-unittests
spec:
  volumes:
    - name: rsa-keys
      configMap:
        name: rsa-keys
        defaultMode: 384
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
        type: ''
  containers:
    - name: compiler
      image: etendo/compiler_jenkins:1.0.6
      ports:
        - name: ssh
          containerPort: 22
          protocol: TCP
        - name: visualvm
          containerPort: 8000
          protocol: TCP
      resources:
        limits:
          cpu: 3072m
          memory: 5000Mi
        requests:
          cpu: 3072m
          memory: 5000Mi
      volumeMounts:
        - name: rsa-keys
          mountPath: /root/.ssh/
        - name: docker-sock
          mountPath: /var/run/docker.sock
      lifecycle:
        postStart:
          exec:
            command:
              - bash
              - '-c'
              - >-
                chmod a+x /var/run/docker.sock && rm
                /etc/apt/sources.list.d/pgdg.list || echo 0 && apt update && apt
                install -y curl
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
    - name: postgres
      image: postgres:14
      workingDir: /home/jenkins
      env:
        - name: POSTGRES_PASSWORD
          value: syspass
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  serviceAccountName: default
  serviceAccount: default
  securityContext: {}
"""
    }
  }

  stages {
    stage('Set Pending Status') {
      steps {
        container('gradle') {
          script {
            try {
              // Actualizar el estado del commit a "pending"
              sh "./update-commit-status.sh ${env.JOB_NAME} ${COMMIT_PENDING_STATUS} 'Tests in progress' ${ACCESS_TOKEN} ${GIT_COMMIT} ${BUILD_URL} '${CONTEXT_BUILD}'"
            } catch (Exception e) {
              currentBuild.result = 'FAILURE'
              error("Failed to set pending status: ${e.message}")
            }
          }
        }
      }
    }

    stage('Run Tests') {
      steps {
        container('gradle') {
          script {
            try {
              sh './gradlew test'
            } catch (Exception e) {
              currentBuild.result = 'FAILURE'
              error("Tests failed: ${e.message}")
            }
          }
        }
      }
    }
  }

  post {
    success {
      script {
        sh "./update-commit-status.sh ${env.JOB_NAME} ${COMMIT_SUCCESS_STATUS} 'Tests passed' ${ACCESS_TOKEN} ${GIT_COMMIT} ${BUILD_URL} '${CONTEXT_BUILD}'"
      }
      mail to: EMAIL_ADDRESS,
      subject: "✅ TESTS PASSED - ${currentBuild.fullDisplayName}",
      body: """
Los tests para el Plugin RX han pasado exitosamente.

Commit: ${env.JOB_NAME}/commit/${GIT_COMMIT}
Build URL: ${BUILD_URL}

Saludos,
Jenkins
"""
    }
    failure {
      script {
        sh "./update-commit-status.sh ${env.JOB_NAME} ${COMMIT_FAILED_STATUS} 'Tests failed' ${ACCESS_TOKEN} ${GIT_COMMIT} ${BUILD_URL} '${CONTEXT_BUILD}'"
      }
      mail to: EMAIL_ADDRESS,
      subject: "❌ TESTS FAILED - ${currentBuild.fullDisplayName}",
      body: """
Los tests para el Plugin RX han fallado.

Commit: ${env.JOB_NAME}/commit/${GIT_COMMIT}
Build URL: ${BUILD_URL}

Por favor, revisa los logs para más detalles.

Saludos,
Jenkins
"""
    }
  }
}
